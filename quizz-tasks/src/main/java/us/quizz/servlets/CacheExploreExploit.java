package us.quizz.servlets;

import com.google.appengine.api.taskqueue.Queue;
import com.google.appengine.api.taskqueue.QueueFactory;
import com.google.appengine.api.taskqueue.TaskOptions;
import com.google.appengine.api.taskqueue.TaskOptions.Builder;
import com.google.inject.Inject;
import com.google.inject.Singleton;

import us.quizz.service.ExplorationExploitationService;

import java.io.IOException;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@SuppressWarnings("serial")
@Singleton
public class CacheExploreExploit extends HttpServlet {
  private ExplorationExploitationService explorationExploitationService;

  @Inject
  public CacheExploreExploit(ExplorationExploitationService explorationExploitationService) {
    this.explorationExploitationService = explorationExploitationService;
  }

  @Override
  public void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {
    Integer N = Integer.parseInt(req.getParameter("N"));
    Integer amax = Integer.parseInt(req.getParameter("a"));
    Integer bmax = Integer.parseInt(req.getParameter("b"));
    Integer cmax = Integer.parseInt(req.getParameter("c"));

    explorationExploitationService.setN(N);
    for (Integer a = 0; a <= amax; a++) {
      for (Integer b = 0; b <= bmax; b++) {
        for (Integer c = 0; c <= cmax; c++) {
          Queue queue = QueueFactory.getQueue("survival");
          queue.add(Builder.withUrl("/api/cacheExploreExploit")
              .method(TaskOptions.Method.POST)
              .param("N", N.toString())
              .param("a", a.toString())
              .param("b", b.toString())
              .param("c", c.toString()));
        }
      }
    }
  }

  @Override
  public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
    Integer N = Integer.parseInt(req.getParameter("N"));
    Integer a = Integer.parseInt(req.getParameter("a"));
    Integer b = Integer.parseInt(req.getParameter("b"));
    Integer c = Integer.parseInt(req.getParameter("c"));

    explorationExploitationService.setN(N);
    explorationExploitationService.cacheValuesInMemcache(a, b, c);
  }
}
