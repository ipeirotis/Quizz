set accounting_group knowledge-panels-users

DEFINE INLINE TABLE collection_mids
SELECT
    entity_id as mid
FROM
    (FLATTEN(kpanels.cards.latest, top_collection))
WHERE
    locale = "en" AND
    top_collection = "xxxxxxxxxx";

DEFINE INLINE TABLE predicates yyyyyyyyyy;

DEFINE INLINE TABLE query_demand
SELECT
    `prefix` AS mid,
    locale_frequency.frequency AS obj_frequency,
    attribute_support.attribute_id AS pred,
    SUM(attribute_support.support.frequency) AS pred_frequency
FROM
    (FLATTEN(
        FLATTEN(kgraph.completions.latest, attribute_support.attribute_id),
     locale_frequency))
WHERE
    locale_frequency.locale = "en" AND
    attribute_support.support.locale="en" AND
    attribute_support.attribute_id IN (SELECT kp_pred FROM predicates) AND
    `prefix` IN (SELECT mid from collection_mids)
GROUP BY mid, obj_frequency, pred
ORDER BY pred_frequency DESC;

DEFINE INLINE TABLE qa_pair
SELECT
    query_demand_table.mid AS question,
    query_demand_table.pred AS pred,
    kpanel_table.ans_mid AS answer,
    query_demand_table.obj_frequency AS obj_frequency,
    query_demand_table.pred_frequency AS pred_frequency
FROM (
    SELECT mid, obj_frequency, pred, pred_frequency
    FROM query_demand
    SHUFFLE BY hash(mid, 1000)
) query_demand_table
JOIN (
    SELECT entity_id AS mid,
           fact.attribute_id AS pred,
           fact.display_value.span.entity_id AS ans_mid
    FROM (FLATTEN(kpanels.cards.latest, fact))
    WHERE locale="en"
          AND fact.display_value.span.entity_id<>""
          AND fact.attribute_id IN (SELECT kp_pred FROM predicates)
          AND entity_id IN (SELECT mid FROM collection_mids)
    SHUFFLE BY hash(mid, 1000)
) kpanel_table
ON query_demand_table.mid=kpanel_table.mid AND
   query_demand_table.pred=kpanel_table.pred
ORDER BY pred_frequency DESC
LIMIT question_count;

DEFINE INLINE TABLE qa_pair_sub
SELECT
    c.question AS question,
    B.obj AS question_text,
    c.pred AS pred,
    c.answer AS answer,
    c.obj_frequency AS obj_frequency,
    c.pred_frequency AS pred_frequency
FROM (
    SELECT question, pred, answer, obj_frequency, pred_frequency
    FROM qa_pair
    SHUFFLE BY hash(question,1000)
) c
JOIN (
    SELECT obj, sub
    FROM kgraph.base.triples.latest
    WHERE pred = "/type/object/name"
          AND text_lang="en"
          AND sub IN (SELECT question FROM qa_pair)
    SHUFFLE BY hash(sub,1000)
) B
ON c.question=B.sub
ORDER BY pred_frequency DESC;

DEFINE INLINE TABLE qa_pair_sub_obj
SELECT
    c.question AS question,
    c.question_text AS question_text,
    c.pred AS pred,
    c.answer AS answer,
    B.obj AS answer_text,
    c.obj_frequency AS obj_frequency,
    c.pred_frequency AS pred_frequency
FROM (
    SELECT question, question_text, pred, answer, obj_frequency, pred_frequency
    FROM qa_pair_sub
    SHUFFLE BY hash(answer,1000)
) c
JOIN (
    SELECT obj, sub
    FROM kgraph.base.triples.latest
    WHERE pred = "/type/object/name"
          AND text_lang="en"
          AND sub IN (SELECT answer FROM qa_pair_sub)
    SHUFFLE BY hash(sub,1000)
) B
ON c.answer=B.sub
ORDER BY pred_frequency DESC;

DEFINE INLINE TABLE golden_kg_pred
SELECT
    golden_table.mid AS mid,
    predicate_table.kv_pred AS kv_pred,
    predicate_table.pred AS pred
FROM (
    SELECT question AS mid, pred
    FROM qa_pair_sub_obj
    SHUFFLE BY hash(pred, 1000)
) golden_table
JOIN (
    SELECT kp_pred AS pred, kv_pred
    FROM predicates
    SHUFFLE BY hash(pred, 1000)
) predicate_table
ON golden_table.pred=predicate_table.pred;

SELECT question, question_text, pred, answer, answer_text, pred_frequency AS weight
FROM qa_pair_sub_obj
ORDER BY weight DESC;

define table kv /namespace/knowledge-vault/data/latest/final/columnio/kv_final.columnio*;
SELECT
    golden_table.mid AS question,
    golden_table.pred AS pred,
    kv_table.answer AS answer,
    kv_table.answer_name AS answer_name,
    kv_table.probability AS probability,
    kv_table.source AS source
FROM (
    SELECT mid, kv_pred, pred
    FROM golden_kg_pred
    SHUFFLE BY hash(mid, 1000)
) golden_table
JOIN (
    SELECT triple.sub AS mid,
           triple.pred AS kv_pred,
           triple.obj AS answer,
           kv_triple.obj_name AS answer_name,
           kv_triple.belief.prob_true AS probability,
           kv_triple.belief.system AS source
    FROM kv
    WHERE triple.text_lang="en"
          AND kv_triple.obj_name <> ""
          AND triple.pred IN (SELECT kv_pred FROM predicates)
          AND triple.sub LIKE "/m/%"
          AND triple.sub IN (SELECT question FROM qa_pair_sub_obj)
    SHUFFLE BY hash(mid, 1000)
) kv_table
ON golden_table.mid=kv_table.mid AND
   golden_table.kv_pred=kv_table.kv_pred;
